#include "Scene.h"
#include "Image.h"

int main() {

	Point p0(0, 0, 0);
	Point p1(1, 0, 0);
	Point p2(0, 1, 0);
	Point p3(0, 0, 1);
	Point p4(1, 1, 0);
	Point p5(1, 0, 1);
	Point p6(0, 1, 1);
	Point p7(1, 1, 1);

	printPoint(p1^p2);
	cout << p3*p4 << endl;
	printPoint(p7 - p6);
	printPoint(p5 + p1);
	p7.set(2, 2, 2);
	printPoint(p7);
	p7.normalise();
	printPoint(p7);
	p7.set(1, 1, 1);

	Ray r1(0, 0, 0, 1, 1, 1);
	Ray r2(p0, p7);
	Ray r3(p1, p2);
	printRay(r1);
	printRay(r2);
	printRay(r3);
	r3.setOrigin(0, 0, 0);
	printRay(r3);
	r3.setDirection(1, 1, 1);

	Scene s;
	float a, b, c, x0, x1;
	a = 1; b = 2; c = 1; x0 = 0; x1 = 0;
	cout << s.existRoot(a, b, c, x0, x1) << " ";
	cout <<"Roots " << x0 <<" "<< x1 << endl;

	sphere sph(2, 2, 2, 1);
	Point intersection;
	cout << s.RaySphereIntersect(r1, sph, intersection) << " ";
	printPoint(intersection);

	int done;
	cin >> done;
	while (done != 0);
	return 0;
}